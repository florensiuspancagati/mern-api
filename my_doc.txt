1. pertama reactjs dulu
	a. pertama bini folder projek
	b. lalu kita install reactjs (saya pakai vite) harus ada nodejs dulu
	c. masuk ke folder reactjs kita (mern-ftree)
	d. lalu nmp install dulu (karna mau install yang belum ada, contohnya vite)
	e. lalu npm run dev (untuk running)

2. nodejs, express, dll.
	a. buat folder dengan nama sesuai projek yang kita mau (mkdir folder_name)
	b. masuk ke folder itu di terminal (cd folder_name)
	c. inisialisasi projek nodejs (npm init) selanjutnya pande pande lah
	d. install package express (npm install express, pande pande lah)
	e. tambah file .gitignore, pande pande lah

1. file index.js
    merupakan entry point utama dalam project aplikasi express ini.
    fungsinya membuat instance, mengatur middleware, menghubungkan route handler, dan menjalankan server.

2. folder routes
    file" pada folder ini mendefinisikan endpoint/route untuk API project ini.
    fungsinya mengatur URL dan menghubungkannya ke controller yang sesuai.

3. folder controller
    file" pada folder ini adalah fungsi handler untuk setiap endpoint.
    fungsinya menangani logika bisnis ketika endpoint di akses.

4. folder models
    file" pada folder ini adalah definisi struktur data/database dan fungsi untuk interaksi dengan database.

Add express-validator untuk melakukan validasi input.

Proyek menggunakan database MongoDB, namun beda dari proyek saya yang sebelumnya, proyek ini menggunakan
    MongoDB melalui server mongodb.
    berikut ini setup nya:
    a. buat proyek baru pada server mongodb
    b. buat cluster baru, pakai yang free
    c. buat user untuk akses database
    d. ke network access untuk buat IP whitelist
	e. setelah melakukan langkah-langkah tersebut, baru bisa diakses dari local

    sekarang cara connect nya:
    a. klik connect di atlas
    b. pilih driver, pandai pandai lah
    c. jangan lupa install mongoose, habis tu import di index.js
    d. lalu bikin query nya, salin url nya, ada di atlas, aman aja

    cara membuat model:
    a. pada file model, import mongoose dan schema
    b. lalu membuat model seperti biasa
    c. jangan lupa export (module.export)

cara untuk upload gambar:
    a. npm install multer, untuk middelware nya
    b. di index.js kita import multer
    c. bikin fileStoreage (untuk lokasi filenya)
    d. bikin fileFilter (untuk filter input user)
    e. bikin middlewarenyaaa...
    f. pada controller, kita bikin pengecekan agar image tidak kosong
    g. lalu tambahkan image pada const Posting
    h. pada model jangan lupa tambahkan image, type nya string, karna cuma simpan url

untuk memanggil data dari db:
    a. buat controller getAllBlogPost
    b. tambahkan routes ke getAllBlogPost, and done

untuk memanggil data dari db dengan id:
	a. pada endpoint tambahkan parameter untuk menangkap id
	b. gunakan fungsi findById

untuk hapus data:
	a. gunakan method delete
	b. hapus file dulu (foto)
	c. baru hapus data (findByIdAndDelete)

menghubungkan frontend dengan backend:
	a. fetch dengan axio, install
    b. npm install axios
